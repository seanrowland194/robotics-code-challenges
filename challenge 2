// Created on Sun March 22 2020 
//Challenge 2 by Sean Rowland 
//integers 
int pause=100;
int distsense=1;
int lmotor=0;
int rmotor=2;
int speed=60;
int veerspeed=20;
int tophat=5;
int main()
{
	foward(); 
	msleep(pause); // getting into position
	ao();
	rightturn();
	msleep(pause);
	ao();
	voyage();
	ao();
	leftturn(); //final allignment to ultimatly follow black line, not now but maybe later
	msleep(pause*5);
	ao();
	printf("Hello, World!\n");
	return 0;
}
//custom functions 
void rightturn(){ //turns the bot right 
	motor(rmotor,-speed);
	motor(lmotor,speed);
	printf("turning right /n");
}
void veerright(){ // moves the bot to the right sligthly
	motor(rmotor,veerspeed+10);
	motor(lmotor,veerspeed);
	printf("veering right /n");
}
void veerleft(){// moves the bot slightly left
	motor(rmotor,speed);
	motor(lmotor,speed);
	printf("veering left /n");
}
void foward(){ // moves the bot foward
	motor(rmotor,speed);
	motor(lmotor,speed);
	printf("foward /n");
}
void leftturn(){
	motor(rmotor,speed);
	motor(lmotor,-speed);
	printf("turning left /n");
}
void voyage(){
	while(analog(distsense)>200){ //detects when it get close to the wall and stops right before it hits it 
		foward();
		msleep(pause);
		ao();
	if(analog(tophat)>0){ // if it senses the black 
		rightturn();
		msleep(pause/3);
		ao();
	}
	}
}
